{
	"name": "incremental load",
	"properties": {
		"activities": [
			{
				"name": "fetching incremental tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT  * FROM [efnproject].[migrationtablelist]\nwhere TypeofLoad='inc'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_efnsqlserver_tablelist",
						"type": "DatasetReference",
						"parameters": {
							"shemaname": "efnproject",
							"tablename": "migrationtablelist"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "irrations for incremetal load",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "fetching incremental tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('fetching incremental tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "fetching  watermarkDateTime from watermarktable",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select watermarkDateTime from [efnproject].[watermarktable]\nwhere tablename =''',item().SourceTableName,'''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_efnsqlserver_watermarktable",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "max modifieddate from onpremise",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(ModifiedDate) as maxmodifieddate from ', item().SourceSchema,'.',item().SourceTableName )",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "onpremise__sqlserver",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "fetch incremental records",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "fetching  watermarkDateTime from watermarktable",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "max modifieddate from onpremise",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select * from ',item().SourceSchema,'.',item().SourceTableName,'where modifieddate >''',activity('fetching  watermarkDateTime from watermarktable').output.firstrow.watermarkDateTime,''' and modifieddate <=''',activity('max modifieddate from onpremise').output.value[0].maxmodifieddate,'''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "efnblob_data",
									"type": "DatasetReference",
									"parameters": {
										"schemaname": {
											"value": "@item().SourceSchema",
											"type": "Expression"
										},
										"tablename": {
											"value": "@item().SourceTableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "update watermarkdate",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "fetch incremental records",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "efnsqlserver",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('update [efnproject].[watermarktable] set watermarkDateTime',activity('max modifieddate from onpremise').output.value[0].maxmodifieddate,''' where tablename=''',item().SourceTableName,'''')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}